<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2018 wuhengzhen[https://github.com/wuhengzhen/]

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
 -->
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 可以指定多个generatorConfiguration标签，以从多个数据库，或以多种不同的参数，生成MyBatis文件 -->
<generatorConfiguration>

    <!-- 引入 properties 配置文件 -->
    <properties resource="properties/mbg.properties"/>
    <!-- 数据库链接驱动包（使用在插件中直接引入方式）指定外部classPath，这里是MySQL数据库驱动地址 -->
    <classPathEntry location="${mbg.jar}"/>

    <!-- 主要配置内容，指定生成哪些MyBais文件，targetRunTime指定生成代码的运行目标，defaultModelType指定一张数据表生成一个领域模型类 -->
    <!-- targetRuntime="MyBatis3Simple"：不生成Example.java文件，进而不生成XXXByExample方法，仅提供最基础的CRUD方法 -->
    <!-- tragetRuntime="MyBatis3"：生成Example.java文件和XXXByExample方法，除了最基础的CRUD方法外，提供自定义动态Where子句功能 -->
    <context id="MySQLTables" targetRuntime="MyBatis3" defaultModelType="flat">

        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <!-- 为生成的Java模型类添加序列化接口 -->
        <!-- <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/> -->
        <!-- 使用自己扩展的序列化插件，对 Example 也实现序列化接口 -->
        <plugin type="com.test.plugins.mybatis.generator.SerializablePlugin"/>
        <!-- 为生成的Java模型创建一个toString方法 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>

        <!-- 这里的type里写的是你的实现类的类全路径 -->
        <commentGenerator type="com.test.plugins.mybatis.generator.CommentGenerator"/>
        <!-- <commentGenerator> -->
            <!-- true:不生成注释，false:生成注释 -->
            <!--<property name="suppressAllComments" value="true"/>-->
            <!-- 在注释中，true:不显示时间戳 ,false:显示时间戳 -->
            <!--<property name="suppressDate" value="true"/>-->
        <!-- </commentGenerator> -->

        <!-- 1.指定JDBC数据库连接信息 -->
        <jdbcConnection driverClass="${mbg.db.driverClassName}" connectionURL="${mbg.db.url}"
                        userId="${mbg.db.username}" password="${mbg.db.password}">
        </jdbcConnection>

        <!-- 类型解析器 -->
        <!-- false: 默认值，根据JDBC中的DECIMAL/NUMBERIC类型的具体定义，分别表达为java.math.BigDecimal, java.lang.Long/Integer/Short -->
        <!-- true: 始终使用java.math.BigDecimal表达JDBC中的DECIMAL/NUMBERIC类型 -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>

        <!-- 2. 指定采用何种方式，生成何种对象 -->
        <!-- 生成领域模型（实体类）和查询对象，	在tragetProject目录下的targetPackage(demo.model)包中生成与数据表同名的领域模型 (Pet.java)， 生成名为PetExample.java的查询对象 -->
        <javaModelGenerator targetPackage="com.test.base.domain.system"
                            targetProject="./src/main/java">
            <property name="User" value="true"/>
            <property name="trimStrings" value="true"/>
            <!-- 不使用setProperty方法，而是使用构造函数为每个字段赋值，推荐不设置此属性 -->
            <!-- <property name="immutable" value="true" /> -->
        </javaModelGenerator>

        <!-- 生成 MyBatis的SQL映射文件，PetMapper.xml -->
        <sqlMapGenerator targetPackage="mapper.base.system"
                         targetProject="${mbg.path}/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!--生成MyBatis的DAO接口，PetMapper.java -->
        <!-- type表示javaClient的类型，支持XMLMAPPER:SQL映射文件+接口，ANNOTATEDMAPPER：SQLBuilder+注解+接口，MIXEDMAPPER：混合形式 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.test.base.dao.system"
                             targetProject="${mbg.path}/java">
            <property name="UserDao" value="true"/>
            <!-- 指定父接口，一般不使用 -->
            <!-- <property name="rootInterface" value="hello" /> -->
        </javaClientGenerator>

        <!-- 3. 指定为哪些数据表生成MyBatis文件 -->

        <table tableName="s_user" domainObjectName="User"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false"/>
    </context>
</generatorConfiguration>
